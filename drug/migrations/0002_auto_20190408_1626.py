# Generated by Django 2.1.5 on 2019-04-08 22:26

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('drug', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Opioids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drugname', models.CharField(db_column='DrugName', max_length=50)),
                ('isopioid', models.IntegerField(db_column='IsOpioid')),
            ],
            options={
                'db_table': 'opioids',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Overdoses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_state_field', models.CharField(db_column='_State_', max_length=50)),
                ('field_population_field', models.CharField(db_column='_Population_', max_length=50)),
                ('field_deaths_field', models.CharField(db_column='_Deaths_', max_length=50)),
                ('field_abbrev_field', models.CharField(db_column='_Abbrev_', max_length=50)),
            ],
            options={
                'db_table': 'overdoses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriberInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorid', models.IntegerField(db_column='DoctorID')),
                ('fname', models.CharField(db_column='Fname', max_length=50)),
                ('lname', models.CharField(db_column='Lname', max_length=50)),
                ('gender', models.CharField(db_column='Gender', max_length=50)),
                ('state', models.CharField(db_column='State', max_length=50)),
                ('credentials', models.CharField(blank=True, db_column='Credentials', max_length=50, null=True)),
                ('specialty', models.CharField(db_column='Specialty', max_length=100)),
                ('opioid_prescriber', models.IntegerField(db_column='Opioid_Prescriber')),
                ('totalprescriptions', models.IntegerField(db_column='TotalPrescriptions')),
                ('abilify', models.IntegerField(db_column='ABILIFY')),
                ('acetaminophen_codeine', models.IntegerField(db_column='ACETAMINOPHEN_CODEINE')),
                ('acyclovir', models.IntegerField(db_column='ACYCLOVIR')),
                ('advair_diskus', models.IntegerField(db_column='ADVAIR_DISKUS')),
                ('aggrenox', models.IntegerField(db_column='AGGRENOX')),
                ('alendronate_sodium', models.IntegerField(db_column='ALENDRONATE_SODIUM')),
                ('allopurinol', models.IntegerField(db_column='ALLOPURINOL')),
                ('alprazolam', models.IntegerField(db_column='ALPRAZOLAM')),
                ('amiodarone_hcl', models.IntegerField(db_column='AMIODARONE_HCL')),
                ('amitriptyline_hcl', models.IntegerField(db_column='AMITRIPTYLINE_HCL')),
                ('amlodipine_besylate', models.IntegerField(db_column='AMLODIPINE_BESYLATE')),
                ('amlodipine_besylate_benazepril', models.IntegerField(db_column='AMLODIPINE_BESYLATE_BENAZEPRIL')),
                ('amoxicillin', models.IntegerField(db_column='AMOXICILLIN')),
                ('amox_tr_potassium_clavulanate', models.IntegerField(db_column='AMOX_TR_POTASSIUM_CLAVULANATE')),
                ('amphetamine_salt_combo', models.IntegerField(db_column='AMPHETAMINE_SALT_COMBO')),
                ('atenolol', models.IntegerField(db_column='ATENOLOL')),
                ('atorvastatin_calcium', models.IntegerField(db_column='ATORVASTATIN_CALCIUM')),
                ('avodart', models.IntegerField(db_column='AVODART')),
                ('azithromycin', models.IntegerField(db_column='AZITHROMYCIN')),
                ('baclofen', models.IntegerField(db_column='BACLOFEN')),
                ('bd_ultra_fine_pen_needle', models.IntegerField(db_column='BD_ULTRA_FINE_PEN_NEEDLE')),
                ('benazepril_hcl', models.IntegerField(db_column='BENAZEPRIL_HCL')),
                ('benicar', models.IntegerField(db_column='BENICAR')),
                ('benicar_hct', models.IntegerField(db_column='BENICAR_HCT')),
                ('benztropine_mesylate', models.IntegerField(db_column='BENZTROPINE_MESYLATE')),
                ('bisoprolol_hydrochlorothiazide', models.IntegerField(db_column='BISOPROLOL_HYDROCHLOROTHIAZIDE')),
                ('brimonidine_tartrate', models.IntegerField(db_column='BRIMONIDINE_TARTRATE')),
                ('bumetanide', models.IntegerField(db_column='BUMETANIDE')),
                ('bupropion_hcl_sr', models.IntegerField(db_column='BUPROPION_HCL_SR')),
                ('bupropion_xl', models.IntegerField(db_column='BUPROPION_XL')),
                ('buspirone_hcl', models.IntegerField(db_column='BUSPIRONE_HCL')),
                ('bystolic', models.IntegerField(db_column='BYSTOLIC')),
                ('carbamazepine', models.IntegerField(db_column='CARBAMAZEPINE')),
                ('carbidopa_levodopa', models.IntegerField(db_column='CARBIDOPA_LEVODOPA')),
                ('carisoprodol', models.IntegerField(db_column='CARISOPRODOL')),
                ('cartia_xt', models.IntegerField(db_column='CARTIA_XT')),
                ('carvedilol', models.IntegerField(db_column='CARVEDILOL')),
                ('cefuroxime', models.IntegerField(db_column='CEFUROXIME')),
                ('celebrex', models.IntegerField(db_column='CELEBREX')),
                ('cephalexin', models.IntegerField(db_column='CEPHALEXIN')),
                ('chlorhexidine_gluconate', models.IntegerField(db_column='CHLORHEXIDINE_GLUCONATE')),
                ('chlorthalidone', models.IntegerField(db_column='CHLORTHALIDONE')),
                ('cilostazol', models.IntegerField(db_column='CILOSTAZOL')),
                ('ciprofloxacin_hcl', models.IntegerField(db_column='CIPROFLOXACIN_HCL')),
                ('citalopram_hbr', models.IntegerField(db_column='CITALOPRAM_HBR')),
                ('clindamycin_hcl', models.IntegerField(db_column='CLINDAMYCIN_HCL')),
                ('clobetasol_propionate', models.IntegerField(db_column='CLOBETASOL_PROPIONATE')),
                ('clonazepam', models.IntegerField(db_column='CLONAZEPAM')),
                ('clonidine_hcl', models.IntegerField(db_column='CLONIDINE_HCL')),
                ('clopidogrel', models.IntegerField(db_column='CLOPIDOGREL')),
                ('clotrimazole_betamethasone', models.IntegerField(db_column='CLOTRIMAZOLE_BETAMETHASONE')),
                ('colcrys', models.IntegerField(db_column='COLCRYS')),
                ('combivent_respimat', models.IntegerField(db_column='COMBIVENT_RESPIMAT')),
                ('crestor', models.IntegerField(db_column='CRESTOR')),
                ('cyclobenzaprine_hcl', models.IntegerField(db_column='CYCLOBENZAPRINE_HCL')),
                ('dexilant', models.IntegerField(db_column='DEXILANT')),
                ('diazepam', models.IntegerField(db_column='DIAZEPAM')),
                ('diclofenac_sodium', models.IntegerField(db_column='DICLOFENAC_SODIUM')),
                ('dicyclomine_hcl', models.IntegerField(db_column='DICYCLOMINE_HCL')),
                ('digox', models.IntegerField(db_column='DIGOX')),
                ('digoxin', models.IntegerField(db_column='DIGOXIN')),
                ('diltiazem_24hr_cd', models.IntegerField(db_column='DILTIAZEM_24HR_CD')),
                ('diltiazem_24hr_er', models.IntegerField(db_column='DILTIAZEM_24HR_ER')),
                ('diltiazem_er', models.IntegerField(db_column='DILTIAZEM_ER')),
                ('diltiazem_hcl', models.IntegerField(db_column='DILTIAZEM_HCL')),
                ('diovan', models.IntegerField(db_column='DIOVAN')),
                ('diphenoxylate_atropine', models.IntegerField(db_column='DIPHENOXYLATE_ATROPINE')),
                ('divalproex_sodium', models.IntegerField(db_column='DIVALPROEX_SODIUM')),
                ('divalproex_sodium_er', models.IntegerField(db_column='DIVALPROEX_SODIUM_ER')),
                ('donepezil_hcl', models.IntegerField(db_column='DONEPEZIL_HCL')),
                ('dorzolamide_timolol', models.IntegerField(db_column='DORZOLAMIDE_TIMOLOL')),
                ('doxazosin_mesylate', models.IntegerField(db_column='DOXAZOSIN_MESYLATE')),
                ('doxepin_hcl', models.IntegerField(db_column='DOXEPIN_HCL')),
                ('doxycycline_hyclate', models.IntegerField(db_column='DOXYCYCLINE_HYCLATE')),
                ('duloxetine_hcl', models.IntegerField(db_column='DULOXETINE_HCL')),
                ('enalapril_maleate', models.IntegerField(db_column='ENALAPRIL_MALEATE')),
                ('escitalopram_oxalate', models.IntegerField(db_column='ESCITALOPRAM_OXALATE')),
                ('estradiol', models.IntegerField(db_column='ESTRADIOL')),
                ('exelon', models.IntegerField(db_column='EXELON')),
                ('famotidine', models.IntegerField(db_column='FAMOTIDINE')),
                ('felodipine_er', models.IntegerField(db_column='FELODIPINE_ER')),
                ('fenofibrate', models.IntegerField(db_column='FENOFIBRATE')),
                ('fentanyl', models.IntegerField(db_column='FENTANYL')),
                ('finasteride', models.IntegerField(db_column='FINASTERIDE')),
                ('flovent_hfa', models.IntegerField(db_column='FLOVENT_HFA')),
                ('fluconazole', models.IntegerField(db_column='FLUCONAZOLE')),
                ('fluoxetine_hcl', models.IntegerField(db_column='FLUOXETINE_HCL')),
                ('fluticasone_propionate', models.IntegerField(db_column='FLUTICASONE_PROPIONATE')),
                ('furosemide', models.IntegerField(db_column='FUROSEMIDE')),
                ('gabapentin', models.IntegerField(db_column='GABAPENTIN')),
                ('gemfibrozil', models.IntegerField(db_column='GEMFIBROZIL')),
                ('glimepiride', models.IntegerField(db_column='GLIMEPIRIDE')),
                ('glipizide', models.IntegerField(db_column='GLIPIZIDE')),
                ('glipizide_er', models.IntegerField(db_column='GLIPIZIDE_ER')),
                ('glipizide_xl', models.IntegerField(db_column='GLIPIZIDE_XL')),
                ('glyburide', models.IntegerField(db_column='GLYBURIDE')),
                ('haloperidol', models.IntegerField(db_column='HALOPERIDOL')),
                ('humalog', models.IntegerField(db_column='HUMALOG')),
                ('hydralazine_hcl', models.IntegerField(db_column='HYDRALAZINE_HCL')),
                ('hydrochlorothiazide', models.IntegerField(db_column='HYDROCHLOROTHIAZIDE')),
                ('hydrocodone_acetaminophen', models.IntegerField(db_column='HYDROCODONE_ACETAMINOPHEN')),
                ('hydrocortisone', models.IntegerField(db_column='HYDROCORTISONE')),
                ('hydromorphone_hcl', models.IntegerField(db_column='HYDROMORPHONE_HCL')),
                ('hydroxyzine_hcl', models.IntegerField(db_column='HYDROXYZINE_HCL')),
                ('ibandronate_sodium', models.IntegerField(db_column='IBANDRONATE_SODIUM')),
                ('ibuprofen', models.IntegerField(db_column='IBUPROFEN')),
                ('insulin_syringe', models.IntegerField(db_column='INSULIN_SYRINGE')),
                ('ipratropium_bromide', models.IntegerField(db_column='IPRATROPIUM_BROMIDE')),
                ('irbesartan', models.IntegerField(db_column='IRBESARTAN')),
                ('isosorbide_mononitrate_er', models.IntegerField(db_column='ISOSORBIDE_MONONITRATE_ER')),
                ('jantoven', models.IntegerField(db_column='JANTOVEN')),
                ('janumet', models.IntegerField(db_column='JANUMET')),
                ('januvia', models.IntegerField(db_column='JANUVIA')),
                ('ketoconazole', models.IntegerField(db_column='KETOCONAZOLE')),
                ('klor_con_10', models.IntegerField(db_column='KLOR_CON_10')),
                ('klor_con_m10', models.IntegerField(db_column='KLOR_CON_M10')),
                ('klor_con_m20', models.IntegerField(db_column='KLOR_CON_M20')),
                ('labetalol_hcl', models.IntegerField(db_column='LABETALOL_HCL')),
                ('lactulose', models.IntegerField(db_column='LACTULOSE')),
                ('lamotrigine', models.IntegerField(db_column='LAMOTRIGINE')),
                ('lansoprazole', models.IntegerField(db_column='LANSOPRAZOLE')),
                ('lantus', models.IntegerField(db_column='LANTUS')),
                ('lantus_solostar', models.IntegerField(db_column='LANTUS_SOLOSTAR')),
                ('latanoprost', models.IntegerField(db_column='LATANOPROST')),
                ('levemir', models.IntegerField(db_column='LEVEMIR')),
                ('levemir_flexpen', models.IntegerField(db_column='LEVEMIR_FLEXPEN')),
                ('levetiracetam', models.IntegerField(db_column='LEVETIRACETAM')),
                ('levofloxacin', models.IntegerField(db_column='LEVOFLOXACIN')),
                ('levothyroxine_sodium', models.IntegerField(db_column='LEVOTHYROXINE_SODIUM')),
                ('lidocaine', models.IntegerField(db_column='LIDOCAINE')),
                ('lisinopril', models.IntegerField(db_column='LISINOPRIL')),
                ('lisinopril_hydrochlorothiazide', models.IntegerField(db_column='LISINOPRIL_HYDROCHLOROTHIAZIDE')),
                ('lithium_carbonate', models.IntegerField(db_column='LITHIUM_CARBONATE')),
                ('lorazepam', models.IntegerField(db_column='LORAZEPAM')),
                ('losartan_hydrochlorothiazide', models.IntegerField(db_column='LOSARTAN_HYDROCHLOROTHIAZIDE')),
                ('losartan_potassium', models.IntegerField(db_column='LOSARTAN_POTASSIUM')),
                ('lovastatin', models.IntegerField(db_column='LOVASTATIN')),
                ('lovaza', models.IntegerField(db_column='LOVAZA')),
                ('lumigan', models.IntegerField(db_column='LUMIGAN')),
                ('lyrica', models.IntegerField(db_column='LYRICA')),
                ('meclizine_hcl', models.IntegerField(db_column='MECLIZINE_HCL')),
                ('meloxicam', models.IntegerField(db_column='MELOXICAM')),
                ('metformin_hcl', models.IntegerField(db_column='METFORMIN_HCL')),
                ('metformin_hcl_er', models.IntegerField(db_column='METFORMIN_HCL_ER')),
                ('methadone_hcl', models.IntegerField(db_column='METHADONE_HCL')),
                ('methocarbamol', models.IntegerField(db_column='METHOCARBAMOL')),
                ('methotrexate', models.IntegerField(db_column='METHOTREXATE')),
                ('methylprednisolone', models.IntegerField(db_column='METHYLPREDNISOLONE')),
                ('metoclopramide_hcl', models.IntegerField(db_column='METOCLOPRAMIDE_HCL')),
                ('metolazone', models.IntegerField(db_column='METOLAZONE')),
                ('metoprolol_succinate', models.IntegerField(db_column='METOPROLOL_SUCCINATE')),
                ('metoprolol_tartrate', models.IntegerField(db_column='METOPROLOL_TARTRATE')),
                ('metronidazole', models.IntegerField(db_column='METRONIDAZOLE')),
                ('mirtazapine', models.IntegerField(db_column='MIRTAZAPINE')),
                ('montelukast_sodium', models.IntegerField(db_column='MONTELUKAST_SODIUM')),
                ('morphine_sulfate', models.IntegerField(db_column='MORPHINE_SULFATE')),
                ('morphine_sulfate_er', models.IntegerField(db_column='MORPHINE_SULFATE_ER')),
                ('mupirocin', models.IntegerField(db_column='MUPIROCIN')),
                ('nabumetone', models.IntegerField(db_column='NABUMETONE')),
                ('namenda', models.IntegerField(db_column='NAMENDA')),
                ('namenda_xr', models.IntegerField(db_column='NAMENDA_XR')),
                ('naproxen', models.IntegerField(db_column='NAPROXEN')),
                ('nasonex', models.IntegerField(db_column='NASONEX')),
                ('nexium', models.IntegerField(db_column='NEXIUM')),
                ('niacin_er', models.IntegerField(db_column='NIACIN_ER')),
                ('nifedical_xl', models.IntegerField(db_column='NIFEDICAL_XL')),
                ('nifedipine_er', models.IntegerField(db_column='NIFEDIPINE_ER')),
                ('nitrofurantoin_mono_macro', models.IntegerField(db_column='NITROFURANTOIN_MONO_MACRO')),
                ('nitrostat', models.IntegerField(db_column='NITROSTAT')),
                ('nortriptyline_hcl', models.IntegerField(db_column='NORTRIPTYLINE_HCL')),
                ('novolog', models.IntegerField(db_column='NOVOLOG')),
                ('novolog_flexpen', models.IntegerField(db_column='NOVOLOG_FLEXPEN')),
                ('nystatin', models.IntegerField(db_column='NYSTATIN')),
                ('olanzapine', models.IntegerField(db_column='OLANZAPINE')),
                ('omeprazole', models.IntegerField(db_column='OMEPRAZOLE')),
                ('ondansetron_hcl', models.IntegerField(db_column='ONDANSETRON_HCL')),
                ('ondansetron_odt', models.IntegerField(db_column='ONDANSETRON_ODT')),
                ('onglyza', models.IntegerField(db_column='ONGLYZA')),
                ('oxcarbazepine', models.IntegerField(db_column='OXCARBAZEPINE')),
                ('oxybutynin_chloride', models.IntegerField(db_column='OXYBUTYNIN_CHLORIDE')),
                ('oxybutynin_chloride_er', models.IntegerField(db_column='OXYBUTYNIN_CHLORIDE_ER')),
                ('oxycodone_acetaminophen', models.IntegerField(db_column='OXYCODONE_ACETAMINOPHEN')),
                ('oxycodone_hcl', models.IntegerField(db_column='OXYCODONE_HCL')),
                ('oxycontin', models.IntegerField(db_column='OXYCONTIN')),
                ('pantoprazole_sodium', models.IntegerField(db_column='PANTOPRAZOLE_SODIUM')),
                ('paroxetine_hcl', models.IntegerField(db_column='PAROXETINE_HCL')),
                ('phenobarbital', models.IntegerField(db_column='PHENOBARBITAL')),
                ('phenytoin_sodium_extended', models.IntegerField(db_column='PHENYTOIN_SODIUM_EXTENDED')),
                ('pioglitazone_hcl', models.IntegerField(db_column='PIOGLITAZONE_HCL')),
                ('polyethylene_glycol_3350', models.IntegerField(db_column='POLYETHYLENE_GLYCOL_3350')),
                ('potassium_chloride', models.IntegerField(db_column='POTASSIUM_CHLORIDE')),
                ('pradaxa', models.IntegerField(db_column='PRADAXA')),
                ('pramipexole_dihydrochloride', models.IntegerField(db_column='PRAMIPEXOLE_DIHYDROCHLORIDE')),
                ('pravastatin_sodium', models.IntegerField(db_column='PRAVASTATIN_SODIUM')),
                ('prednisone', models.IntegerField(db_column='PREDNISONE')),
                ('premarin', models.IntegerField(db_column='PREMARIN')),
                ('primidone', models.IntegerField(db_column='PRIMIDONE')),
                ('proair_hfa', models.IntegerField(db_column='PROAIR_HFA')),
                ('promethazine_hcl', models.IntegerField(db_column='PROMETHAZINE_HCL')),
                ('propranolol_hcl', models.IntegerField(db_column='PROPRANOLOL_HCL')),
                ('propranolol_hcl_er', models.IntegerField(db_column='PROPRANOLOL_HCL_ER')),
                ('quetiapine_fumarate', models.IntegerField(db_column='QUETIAPINE_FUMARATE')),
                ('quinapril_hcl', models.IntegerField(db_column='QUINAPRIL_HCL')),
                ('raloxifene_hcl', models.IntegerField(db_column='RALOXIFENE_HCL')),
                ('ramipril', models.IntegerField(db_column='RAMIPRIL')),
                ('ranexa', models.IntegerField(db_column='RANEXA')),
                ('ranitidine_hcl', models.IntegerField(db_column='RANITIDINE_HCL')),
                ('restasis', models.IntegerField(db_column='RESTASIS')),
                ('risperidone', models.IntegerField(db_column='RISPERIDONE')),
                ('ropinirole_hcl', models.IntegerField(db_column='ROPINIROLE_HCL')),
                ('seroquel_xr', models.IntegerField(db_column='SEROQUEL_XR')),
                ('sertraline_hcl', models.IntegerField(db_column='SERTRALINE_HCL')),
                ('simvastatin', models.IntegerField(db_column='SIMVASTATIN')),
                ('sotalol', models.IntegerField(db_column='SOTALOL')),
                ('spiriva', models.IntegerField(db_column='SPIRIVA')),
                ('spironolactone', models.IntegerField(db_column='SPIRONOLACTONE')),
                ('sucralfate', models.IntegerField(db_column='SUCRALFATE')),
                ('sulfamethoxazole_trimethoprim', models.IntegerField(db_column='SULFAMETHOXAZOLE_TRIMETHOPRIM')),
                ('sumatriptan_succinate', models.IntegerField(db_column='SUMATRIPTAN_SUCCINATE')),
                ('symbicort', models.IntegerField(db_column='SYMBICORT')),
                ('synthroid', models.IntegerField(db_column='SYNTHROID')),
                ('tamsulosin_hcl', models.IntegerField(db_column='TAMSULOSIN_HCL')),
                ('temazepam', models.IntegerField(db_column='TEMAZEPAM')),
                ('terazosin_hcl', models.IntegerField(db_column='TERAZOSIN_HCL')),
                ('timolol_maleate', models.IntegerField(db_column='TIMOLOL_MALEATE')),
                ('tizanidine_hcl', models.IntegerField(db_column='TIZANIDINE_HCL')),
                ('tolterodine_tartrate_er', models.IntegerField(db_column='TOLTERODINE_TARTRATE_ER')),
                ('topiramate', models.IntegerField(db_column='TOPIRAMATE')),
                ('toprol_xl', models.IntegerField(db_column='TOPROL_XL')),
                ('torsemide', models.IntegerField(db_column='TORSEMIDE')),
                ('tramadol_hcl', models.IntegerField(db_column='TRAMADOL_HCL')),
                ('travatan_z', models.IntegerField(db_column='TRAVATAN_Z')),
                ('trazodone_hcl', models.IntegerField(db_column='TRAZODONE_HCL')),
                ('triamcinolone_acetonide', models.IntegerField(db_column='TRIAMCINOLONE_ACETONIDE')),
                ('triamterene_hydrochlorothiazid', models.IntegerField(db_column='TRIAMTERENE_HYDROCHLOROTHIAZID')),
                ('valacyclovir', models.IntegerField(db_column='VALACYCLOVIR')),
                ('valsartan', models.IntegerField(db_column='VALSARTAN')),
                ('valsartan_hydrochlorothiazide', models.IntegerField(db_column='VALSARTAN_HYDROCHLOROTHIAZIDE')),
                ('venlafaxine_hcl', models.IntegerField(db_column='VENLAFAXINE_HCL')),
                ('venlafaxine_hcl_er', models.IntegerField(db_column='VENLAFAXINE_HCL_ER')),
                ('ventolin_hfa', models.IntegerField(db_column='VENTOLIN_HFA')),
                ('verapamil_er', models.IntegerField(db_column='VERAPAMIL_ER')),
                ('vesicare', models.IntegerField(db_column='VESICARE')),
                ('voltaren', models.IntegerField(db_column='VOLTAREN')),
                ('vytorin', models.IntegerField(db_column='VYTORIN')),
                ('warfarin_sodium', models.IntegerField(db_column='WARFARIN_SODIUM')),
                ('xarelto', models.IntegerField(db_column='XARELTO')),
                ('zetia', models.IntegerField(db_column='ZETIA')),
                ('ziprasidone_hcl', models.IntegerField(db_column='ZIPRASIDONE_HCL')),
                ('zolpidem_tartrate', models.IntegerField(db_column='ZOLPIDEM_TARTRATE')),
            ],
            options={
                'db_table': 'prescriber_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Triple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorid', models.IntegerField(db_column='DoctorID')),
                ('drug', models.CharField(db_column='Drug', max_length=50)),
                ('qty', models.IntegerField(db_column='Qty')),
            ],
            options={
                'db_table': 'triple',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='prescription',
        ),
    ]
